(load "./ch1/1_21.scm")

(define (prime? n)
  (= n (smallest-divisor n)))
(prime? 5)
(prime? 100)

(define (timed-prime-test n)
  (newline)
  (display n)
  (start-prime-test n (runtime)))
(define (start-prime-test n start-time)
  (if (prime? n)
      (report-prime n (- (runtime) start-time))))
(define (report-prime n elapsed-time)
  (display " is prime. elapsed-time = ")
  (display elapsed-time))

; (timed-prime-test 97)
; (timed-prime-test 100)
; (timed-prime-test 10000)
; (timed-prime-test 100000)

(define (search-for-primes num count)
  (define (next-odd n)
    (if (even? n) 
        (+ 1 n)
        (+ 2 n)))
  (cond ((= count 0)
         (newline)
         (display "are primes. end"))
        ((prime? num)
         (newline)
         (display num)
         (search-for-primes (next-odd num) (- count 1)))
        (else (search-for-primes (next-odd num) count))))

(define (search-for-primes-for-question n)
  (let ((start-time (real-time-clock)))
       (search-for-primes n 3)
       (- (real-time-clock) start-time)))
(search-for-primes-for-question 1000)
(search-for-primes-for-question 10000)
(search-for-primes-for-question 100000)
(search-for-primes-for-question 1000000)


(define (inc x)
  (+ x 1))
(inc 123)
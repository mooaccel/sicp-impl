(define (sum term a next b)
  (if (> a b)
      0
      (+ (term a)
         (sum term (next a) next b))))

(define (simpson-rule-integral f a b n)
  (let ((h (/ (- b a) n)))
    (define (y k)
      (f (+ a (* k h))))
    (define (factor k)
      (cond ((or (= k 0) (= k n)) 1)
            ((odd? k) 4)
            (else 2)))
    (define (term k)
      (* (factor k)
         (y k)))
    (define (next k)
      (+ k 1))
    (* (/ h 3.0)
       (sum term (exact->inexact 0) next n))
    ))

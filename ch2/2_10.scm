; (load "./ch2/2_07.scm")
; (load "./ch2/2_08.scm")

(define (make-interval a b) 
  (cons a b))
(define (lower-bound interval)
  (min (car interval) (cdr interval)))
(define (upper-bound interval)
  (max (car interval) (cdr interval)))
;(define (lower-bound interval)
;  (car interval))
;(define (upper-bound interval)
;  (cdr interval))

(define (add-interval x y)
  (make-interval (+ (lower-bound x) (lower-bound y)) 
                 (+ (upper-bound x) (upper-bound y))))
(define (sub-interval x y)
  (make-interval (- (lower-bound x) (upper-bound y)) 
                 (- (upper-bound x) (lower-bound y))))
(define (mul-interval x y) 
  (let ((p1 (* (lower-bound x) (lower-bound y)))
        (p2 (* (lower-bound x) (upper-bound y))) 
        (p3 (* (upper-bound x) (lower-bound y))) 
        (p4 (* (upper-bound x) (upper-bound y)))) 
    (make-interval (min p1 p2 p3 p4) (max p1 p2 p3 p4))))
(define (div-interval x y) 
   (if (<= (* (lower-bound y) (upper-bound y)) 0) 
       (error "错误Division error (interval spans 0)" y) 
       (mul-interval x  
                     (make-interval (/ 1. (upper-bound y)) 
                                    (/ 1. (lower-bound y))))))
(define (print-interval interval) 
  (newline) 
  (display "(") 
  (display (lower-bound interval)) 
  (display ",")
  (display (upper-bound interval)) 
  (display ")"))

;(define i (make-interval 2.0 7.0)) 
;(define j (make-interval 3.0 8.0)) 
;(print-interval (div-interval i j)) 

;(define span-0 (make-interval -1 1)) 
;(print-interval (div-interval i span-0)) 